import * as ts from 'typescript'

export type SyntaxKindToDeclaration = {
  [ts.SyntaxKind.Unknown]: null
  [ts.SyntaxKind.EndOfFileToken]: ts.EndOfFileToken
  [ts.SyntaxKind.SingleLineCommentTrivia]: ts.CommentRange
  [ts.SyntaxKind.MultiLineCommentTrivia]: ts.CommentRange
  [ts.SyntaxKind.NewLineTrivia]: ts.Node
  [ts.SyntaxKind.WhitespaceTrivia]: ts.Node
  [ts.SyntaxKind.ConflictMarkerTrivia]: ts.Node
  [ts.SyntaxKind.NonTextFileMarkerTrivia]: ts.Node
  [ts.SyntaxKind.NumericLiteral]: ts.NumericLiteral
  [ts.SyntaxKind.BigIntLiteral]: ts.BigIntLiteral
  [ts.SyntaxKind.StringLiteral]: ts.StringLiteral
  [ts.SyntaxKind.JsxText]: ts.JsxText
  [ts.SyntaxKind.JsxTextAllWhiteSpaces]: ts.JsxText
  [ts.SyntaxKind.RegularExpressionLiteral]: ts.RegularExpressionLiteral
  [ts.SyntaxKind.NoSubstitutionTemplateLiteral]: ts.NoSubstitutionTemplateLiteral
  [ts.SyntaxKind.TemplateHead]: ts.TemplateHead
  [ts.SyntaxKind.TemplateMiddle]: ts.TemplateMiddle
  [ts.SyntaxKind.TemplateTail]: ts.TemplateTail
  [ts.SyntaxKind.OpenBraceToken]: ts.Token<ts.SyntaxKind.OpenBraceToken>
  [ts.SyntaxKind.CloseBraceToken]: ts.Token<ts.SyntaxKind.CloseBraceToken>
  [ts.SyntaxKind.OpenParenToken]: ts.Token<ts.SyntaxKind.OpenParenToken>
  [ts.SyntaxKind.CloseParenToken]: ts.Token<ts.SyntaxKind.CloseParenToken>
  [ts.SyntaxKind.OpenBracketToken]: ts.Token<ts.SyntaxKind.OpenBracketToken>
  [ts.SyntaxKind.CloseBracketToken]: ts.Token<ts.SyntaxKind.CloseBracketToken>
  [ts.SyntaxKind.DotToken]: ts.Token<ts.SyntaxKind.DotToken>
  [ts.SyntaxKind.DotDotDotToken]: ts.Token<ts.SyntaxKind.DotDotDotToken>
  [ts.SyntaxKind.SemicolonToken]: ts.Token<ts.SyntaxKind.SemicolonToken>
  [ts.SyntaxKind.CommaToken]: ts.Token<ts.SyntaxKind.CommaToken>
  [ts.SyntaxKind.QuestionDotToken]: ts.Token<ts.SyntaxKind.QuestionDotToken>
  [ts.SyntaxKind.LessThanToken]: ts.Token<ts.SyntaxKind.LessThanToken>
  [ts.SyntaxKind.LessThanSlashToken]: ts.Token<ts.SyntaxKind.LessThanSlashToken>
  [ts.SyntaxKind.GreaterThanToken]: ts.Token<ts.SyntaxKind.GreaterThanToken>
  [ts.SyntaxKind.LessThanEqualsToken]: ts.Token<ts.SyntaxKind.LessThanEqualsToken>
  [ts.SyntaxKind.GreaterThanEqualsToken]: ts.Token<ts.SyntaxKind.GreaterThanEqualsToken>
  [ts.SyntaxKind.EqualsEqualsToken]: ts.Token<ts.SyntaxKind.EqualsEqualsToken>
  [ts.SyntaxKind.ExclamationEqualsToken]: ts.Token<ts.SyntaxKind.ExclamationEqualsToken>
  [ts.SyntaxKind.EqualsEqualsEqualsToken]: ts.Token<ts.SyntaxKind.EqualsEqualsEqualsToken>
  [ts.SyntaxKind.ExclamationEqualsEqualsToken]: ts.Token<ts.SyntaxKind.ExclamationEqualsEqualsToken>
  [ts.SyntaxKind.EqualsGreaterThanToken]: ts.Token<ts.SyntaxKind.EqualsGreaterThanToken>
  [ts.SyntaxKind.PlusToken]: ts.Token<ts.SyntaxKind.PlusToken>
  [ts.SyntaxKind.MinusToken]: ts.Token<ts.SyntaxKind.MinusToken>
  [ts.SyntaxKind.AsteriskToken]: ts.Token<ts.SyntaxKind.AsteriskToken>
  [ts.SyntaxKind.AsteriskAsteriskToken]: ts.Token<ts.SyntaxKind.AsteriskAsteriskToken>
  [ts.SyntaxKind.SlashToken]: ts.Token<ts.SyntaxKind.SlashToken>
  [ts.SyntaxKind.PercentToken]: ts.Token<ts.SyntaxKind.PercentToken>
  [ts.SyntaxKind.PlusPlusToken]: ts.Token<ts.SyntaxKind.PlusPlusToken>
  [ts.SyntaxKind.MinusMinusToken]: ts.Token<ts.SyntaxKind.MinusMinusToken>
  [ts.SyntaxKind.LessThanLessThanToken]: ts.Token<ts.SyntaxKind.LessThanLessThanToken>
  [ts.SyntaxKind.GreaterThanGreaterThanToken]: ts.Token<ts.SyntaxKind.GreaterThanGreaterThanToken>
  [ts.SyntaxKind
    .GreaterThanGreaterThanGreaterThanToken]: ts.Token<ts.SyntaxKind.GreaterThanGreaterThanGreaterThanToken>
  [ts.SyntaxKind.AmpersandToken]: ts.Token<ts.SyntaxKind.AmpersandToken>
  [ts.SyntaxKind.BarToken]: ts.Token<ts.SyntaxKind.BarToken>
  [ts.SyntaxKind.CaretToken]: ts.Token<ts.SyntaxKind.CaretToken>
  [ts.SyntaxKind.ExclamationToken]: ts.Token<ts.SyntaxKind.ExclamationToken>
  [ts.SyntaxKind.TildeToken]: ts.Token<ts.SyntaxKind.TildeToken>
  [ts.SyntaxKind.AmpersandAmpersandToken]: ts.Token<ts.SyntaxKind.AmpersandAmpersandToken>
  [ts.SyntaxKind.BarBarToken]: ts.Token<ts.SyntaxKind.BarBarToken>
  [ts.SyntaxKind.QuestionToken]: ts.Token<ts.SyntaxKind.QuestionToken>
  [ts.SyntaxKind.ColonToken]: ts.Token<ts.SyntaxKind.ColonToken>
  [ts.SyntaxKind.AtToken]: ts.Token<ts.SyntaxKind.AtToken>
  [ts.SyntaxKind.QuestionQuestionToken]: ts.Token<ts.SyntaxKind.QuestionQuestionToken>
  [ts.SyntaxKind.BacktickToken]: ts.Token<ts.SyntaxKind.BacktickToken>
  [ts.SyntaxKind.HashToken]: ts.Token<ts.SyntaxKind.HashToken>
  [ts.SyntaxKind.EqualsToken]: ts.Token<ts.SyntaxKind.EqualsToken>
  [ts.SyntaxKind.PlusEqualsToken]: ts.Token<ts.SyntaxKind.PlusEqualsToken>
  [ts.SyntaxKind.MinusEqualsToken]: ts.Token<ts.SyntaxKind.MinusEqualsToken>
  [ts.SyntaxKind.AsteriskEqualsToken]: ts.Token<ts.SyntaxKind.AsteriskEqualsToken>
  [ts.SyntaxKind.AsteriskAsteriskEqualsToken]: ts.Token<ts.SyntaxKind.AsteriskAsteriskEqualsToken>
  [ts.SyntaxKind.SlashEqualsToken]: ts.Token<ts.SyntaxKind.SlashEqualsToken>
  [ts.SyntaxKind.PercentEqualsToken]: ts.Token<ts.SyntaxKind.PercentEqualsToken>
  [ts.SyntaxKind.LessThanLessThanEqualsToken]: ts.Token<ts.SyntaxKind.LessThanLessThanEqualsToken>
  [ts.SyntaxKind
    .GreaterThanGreaterThanEqualsToken]: ts.Token<ts.SyntaxKind.GreaterThanGreaterThanEqualsToken>
  [ts.SyntaxKind
    .GreaterThanGreaterThanGreaterThanEqualsToken]: ts.Token<ts.SyntaxKind.GreaterThanGreaterThanGreaterThanEqualsToken>
  [ts.SyntaxKind.AmpersandEqualsToken]: ts.Token<ts.SyntaxKind.AmpersandEqualsToken>
  [ts.SyntaxKind.BarEqualsToken]: ts.Token<ts.SyntaxKind.BarEqualsToken>
  [ts.SyntaxKind.BarBarEqualsToken]: ts.Token<ts.SyntaxKind.BarBarEqualsToken>
  [ts.SyntaxKind
    .AmpersandAmpersandEqualsToken]: ts.Token<ts.SyntaxKind.AmpersandAmpersandEqualsToken>
  [ts.SyntaxKind.QuestionQuestionEqualsToken]: ts.Token<ts.SyntaxKind.QuestionQuestionEqualsToken>
  [ts.SyntaxKind.CaretEqualsToken]: ts.Token<ts.SyntaxKind.CaretEqualsToken>
  [ts.SyntaxKind.Identifier]: ts.Identifier
  [ts.SyntaxKind.PrivateIdentifier]: ts.PrivateIdentifier
  [ts.SyntaxKind.BreakKeyword]: ts.Token<ts.SyntaxKind.BreakKeyword>
  [ts.SyntaxKind.CaseKeyword]: ts.Token<ts.SyntaxKind.CaseKeyword>
  [ts.SyntaxKind.CatchKeyword]: ts.Token<ts.SyntaxKind.CatchKeyword>
  [ts.SyntaxKind.ClassKeyword]: ts.Token<ts.SyntaxKind.ClassKeyword>
  [ts.SyntaxKind.ConstKeyword]: ts.Token<ts.SyntaxKind.ConstKeyword>
  [ts.SyntaxKind.ContinueKeyword]: ts.Token<ts.SyntaxKind.ContinueKeyword>
  [ts.SyntaxKind.DebuggerKeyword]: ts.Token<ts.SyntaxKind.DebuggerKeyword>
  [ts.SyntaxKind.DefaultKeyword]: ts.Token<ts.SyntaxKind.DefaultKeyword>
  [ts.SyntaxKind.DeleteKeyword]: ts.Token<ts.SyntaxKind.DeleteKeyword>
  [ts.SyntaxKind.DoKeyword]: ts.Token<ts.SyntaxKind.DoKeyword>
  [ts.SyntaxKind.ElseKeyword]: ts.Token<ts.SyntaxKind.ElseKeyword>
  [ts.SyntaxKind.EnumKeyword]: ts.Token<ts.SyntaxKind.EnumKeyword>
  [ts.SyntaxKind.ExportKeyword]: ts.Token<ts.SyntaxKind.ExportKeyword>
  [ts.SyntaxKind.ExtendsKeyword]: ts.Token<ts.SyntaxKind.ExtendsKeyword>
  [ts.SyntaxKind.FalseKeyword]: ts.Token<ts.SyntaxKind.FalseKeyword>
  [ts.SyntaxKind.FinallyKeyword]: ts.Token<ts.SyntaxKind.FinallyKeyword>
  [ts.SyntaxKind.ForKeyword]: ts.Token<ts.SyntaxKind.ForKeyword>
  [ts.SyntaxKind.FunctionKeyword]: ts.Token<ts.SyntaxKind.FunctionKeyword>
  [ts.SyntaxKind.IfKeyword]: ts.Token<ts.SyntaxKind.IfKeyword>
  [ts.SyntaxKind.ImportKeyword]: ts.Token<ts.SyntaxKind.ImportKeyword>
  [ts.SyntaxKind.InKeyword]: ts.Token<ts.SyntaxKind.InKeyword>
  [ts.SyntaxKind.InstanceOfKeyword]: ts.Token<ts.SyntaxKind.InstanceOfKeyword>
  [ts.SyntaxKind.NewKeyword]: ts.Token<ts.SyntaxKind.NewKeyword>
  [ts.SyntaxKind.NullKeyword]: ts.Token<ts.SyntaxKind.NullKeyword>
  [ts.SyntaxKind.ReturnKeyword]: ts.Token<ts.SyntaxKind.ReturnKeyword>

  [ts.SyntaxKind.SuperKeyword]: ts.Token<ts.SyntaxKind.SuperKeyword>
  [ts.SyntaxKind.SwitchKeyword]: ts.Token<ts.SyntaxKind.SwitchKeyword>
  [ts.SyntaxKind.ThisKeyword]: ts.Token<ts.SyntaxKind.ThisKeyword>
  [ts.SyntaxKind.ThrowKeyword]: ts.Token<ts.SyntaxKind.ThrowKeyword>
  [ts.SyntaxKind.TrueKeyword]: ts.Token<ts.SyntaxKind.TrueKeyword>
  [ts.SyntaxKind.TryKeyword]: ts.Token<ts.SyntaxKind.TryKeyword>
  [ts.SyntaxKind.TypeOfKeyword]: ts.Token<ts.SyntaxKind.TypeOfKeyword>
  [ts.SyntaxKind.VarKeyword]: ts.Token<ts.SyntaxKind.VarKeyword>
  [ts.SyntaxKind.VoidKeyword]: ts.Token<ts.SyntaxKind.VoidKeyword>
  [ts.SyntaxKind.WhileKeyword]: ts.Token<ts.SyntaxKind.WhileKeyword>
  [ts.SyntaxKind.WithKeyword]: ts.Token<ts.SyntaxKind.WithKeyword>
  [ts.SyntaxKind.ImplementsKeyword]: ts.Token<ts.SyntaxKind.ImplementsKeyword>
  [ts.SyntaxKind.InterfaceKeyword]: ts.Token<ts.SyntaxKind.InterfaceKeyword>
  [ts.SyntaxKind.LetKeyword]: ts.Token<ts.SyntaxKind.LetKeyword>
  [ts.SyntaxKind.PackageKeyword]: ts.Token<ts.SyntaxKind.PackageKeyword>
  [ts.SyntaxKind.PrivateKeyword]: ts.Token<ts.SyntaxKind.PrivateKeyword>
  [ts.SyntaxKind.ProtectedKeyword]: ts.Token<ts.SyntaxKind.ProtectedKeyword>
  [ts.SyntaxKind.PublicKeyword]: ts.Token<ts.SyntaxKind.PublicKeyword>
  [ts.SyntaxKind.StaticKeyword]: ts.Token<ts.SyntaxKind.StaticKeyword>
  [ts.SyntaxKind.YieldKeyword]: ts.Token<ts.SyntaxKind.YieldKeyword>
  [ts.SyntaxKind.AbstractKeyword]: ts.Token<ts.SyntaxKind.AbstractKeyword>
  [ts.SyntaxKind.AccessorKeyword]: ts.Token<ts.SyntaxKind.AccessorKeyword>
  [ts.SyntaxKind.AsKeyword]: ts.Token<ts.SyntaxKind.AsKeyword>
  [ts.SyntaxKind.AssertsKeyword]: ts.Token<ts.SyntaxKind.AssertsKeyword>
  [ts.SyntaxKind.AssertKeyword]: ts.Token<ts.SyntaxKind.AssertKeyword>
  [ts.SyntaxKind.AnyKeyword]: ts.Token<ts.SyntaxKind.AnyKeyword>
  [ts.SyntaxKind.AsyncKeyword]: ts.Token<ts.SyntaxKind.AsyncKeyword>
  [ts.SyntaxKind.AwaitKeyword]: ts.Token<ts.SyntaxKind.AwaitKeyword>
  [ts.SyntaxKind.BooleanKeyword]: ts.Token<ts.SyntaxKind.BooleanKeyword>
  [ts.SyntaxKind.ConstructorKeyword]: ts.Token<ts.SyntaxKind.ConstructorKeyword>
  [ts.SyntaxKind.DeclareKeyword]: ts.Token<ts.SyntaxKind.DeclareKeyword>
  [ts.SyntaxKind.GetKeyword]: ts.Token<ts.SyntaxKind.GetKeyword>
  [ts.SyntaxKind.InferKeyword]: ts.Token<ts.SyntaxKind.InferKeyword>
  [ts.SyntaxKind.IntrinsicKeyword]: ts.Token<ts.SyntaxKind.IntrinsicKeyword>
  [ts.SyntaxKind.IsKeyword]: ts.Token<ts.SyntaxKind.IsKeyword>
  [ts.SyntaxKind.KeyOfKeyword]: ts.Token<ts.SyntaxKind.KeyOfKeyword>
  [ts.SyntaxKind.ModuleKeyword]: ts.Token<ts.SyntaxKind.ModuleKeyword>
  [ts.SyntaxKind.NamespaceKeyword]: ts.Token<ts.SyntaxKind.NamespaceKeyword>
  [ts.SyntaxKind.NeverKeyword]: ts.Token<ts.SyntaxKind.NeverKeyword>
  [ts.SyntaxKind.OutKeyword]: ts.Token<ts.SyntaxKind.OutKeyword>
  [ts.SyntaxKind.ReadonlyKeyword]: ts.Token<ts.SyntaxKind.ReadonlyKeyword>
  [ts.SyntaxKind.RequireKeyword]: ts.Token<ts.SyntaxKind.RequireKeyword>
  [ts.SyntaxKind.NumberKeyword]: ts.Token<ts.SyntaxKind.NumberKeyword>
  [ts.SyntaxKind.ObjectKeyword]: ts.Token<ts.SyntaxKind.ObjectKeyword>
  [ts.SyntaxKind.SatisfiesKeyword]: ts.Token<ts.SyntaxKind.SatisfiesKeyword>
  [ts.SyntaxKind.SetKeyword]: ts.Token<ts.SyntaxKind.SetKeyword>
  [ts.SyntaxKind.StringKeyword]: ts.Token<ts.SyntaxKind.StringKeyword>
  [ts.SyntaxKind.SymbolKeyword]: ts.Token<ts.SyntaxKind.SymbolKeyword>
  [ts.SyntaxKind.TypeKeyword]: ts.Token<ts.SyntaxKind.TypeKeyword>
  [ts.SyntaxKind.UndefinedKeyword]: ts.Token<ts.SyntaxKind.UndefinedKeyword>
  [ts.SyntaxKind.UniqueKeyword]: ts.Token<ts.SyntaxKind.UniqueKeyword>
  [ts.SyntaxKind.UnknownKeyword]: ts.Token<ts.SyntaxKind.UnknownKeyword>
  [ts.SyntaxKind.UsingKeyword]: ts.Token<ts.SyntaxKind.UsingKeyword>
  [ts.SyntaxKind.FromKeyword]: ts.Token<ts.SyntaxKind.FromKeyword>
  [ts.SyntaxKind.GlobalKeyword]: ts.Token<ts.SyntaxKind.GlobalKeyword>
  [ts.SyntaxKind.BigIntKeyword]: ts.Token<ts.SyntaxKind.BigIntKeyword>
  [ts.SyntaxKind.OverrideKeyword]: ts.Token<ts.SyntaxKind.OverrideKeyword>
  [ts.SyntaxKind.OfKeyword]: ts.Token<ts.SyntaxKind.OfKeyword>
  [ts.SyntaxKind.QualifiedName]: ts.QualifiedName
  [ts.SyntaxKind.ComputedPropertyName]: ts.ComputedPropertyName
  [ts.SyntaxKind.TypeParameter]: ts.TypeParameterDeclaration
  [ts.SyntaxKind.Parameter]: ts.ParameterDeclaration
  [ts.SyntaxKind.Decorator]: ts.Decorator
  [ts.SyntaxKind.PropertySignature]: ts.PropertySignature
  [ts.SyntaxKind.PropertyDeclaration]: ts.PropertyDeclaration
  [ts.SyntaxKind.MethodSignature]: ts.MethodSignature
  [ts.SyntaxKind.MethodDeclaration]: ts.MethodDeclaration
  [ts.SyntaxKind.ClassStaticBlockDeclaration]: ts.ClassStaticBlockDeclaration
  [ts.SyntaxKind.Constructor]: ts.ConstructorDeclaration
  [ts.SyntaxKind.GetAccessor]: ts.GetAccessorDeclaration
  [ts.SyntaxKind.SetAccessor]: ts.SetAccessorDeclaration
  [ts.SyntaxKind.CallSignature]: ts.CallSignatureDeclaration
  [ts.SyntaxKind.ConstructSignature]: ts.ConstructSignatureDeclaration
  [ts.SyntaxKind.IndexSignature]: ts.IndexSignatureDeclaration
  [ts.SyntaxKind.TypePredicate]: ts.TypePredicateNode
  [ts.SyntaxKind.TypeReference]: ts.TypeReferenceNode
  [ts.SyntaxKind.FunctionType]: ts.FunctionTypeNode
  [ts.SyntaxKind.ConstructorType]: ts.ConstructorTypeNode
  [ts.SyntaxKind.TypeQuery]: ts.TypeQueryNode
  [ts.SyntaxKind.TypeLiteral]: ts.TypeLiteralNode
  [ts.SyntaxKind.ArrayType]: ts.ArrayTypeNode
  [ts.SyntaxKind.TupleType]: ts.TupleTypeNode
  [ts.SyntaxKind.OptionalType]: ts.OptionalTypeNode
  [ts.SyntaxKind.RestType]: ts.RestTypeNode
  [ts.SyntaxKind.UnionType]: ts.UnionTypeNode
  [ts.SyntaxKind.IntersectionType]: ts.IntersectionTypeNode
  [ts.SyntaxKind.ConditionalType]: ts.ConditionalTypeNode
  [ts.SyntaxKind.InferType]: ts.InferTypeNode
  [ts.SyntaxKind.ParenthesizedType]: ts.ParenthesizedTypeNode
  [ts.SyntaxKind.ThisType]: ts.ThisTypeNode
  [ts.SyntaxKind.TypeOperator]: ts.TypeOperatorNode
  [ts.SyntaxKind.IndexedAccessType]: ts.IndexedAccessTypeNode
  [ts.SyntaxKind.MappedType]: ts.MappedTypeNode
  [ts.SyntaxKind.LiteralType]: ts.LiteralTypeNode
  [ts.SyntaxKind.NamedTupleMember]: ts.NamedTupleMember
  [ts.SyntaxKind.TemplateLiteralType]: ts.TemplateLiteralTypeNode
  [ts.SyntaxKind.TemplateLiteralTypeSpan]: ts.TemplateLiteralTypeSpan
  [ts.SyntaxKind.ImportType]: ts.ImportTypeNode
  [ts.SyntaxKind.ObjectBindingPattern]: ts.ObjectBindingPattern
  [ts.SyntaxKind.ArrayBindingPattern]: ts.ArrayBindingPattern
  [ts.SyntaxKind.BindingElement]: ts.BindingElement
  [ts.SyntaxKind.ArrayLiteralExpression]: ts.ArrayLiteralExpression
  [ts.SyntaxKind.ObjectLiteralExpression]: ts.ObjectLiteralExpression
  [ts.SyntaxKind.PropertyAccessExpression]: ts.PropertyAccessExpression
  [ts.SyntaxKind.ElementAccessExpression]: ts.ElementAccessExpression
  [ts.SyntaxKind.CallExpression]: ts.CallExpression
  [ts.SyntaxKind.NewExpression]: ts.NewExpression
  [ts.SyntaxKind.TaggedTemplateExpression]: ts.TaggedTemplateExpression
  [ts.SyntaxKind.TypeAssertionExpression]: ts.TypeAssertion
  [ts.SyntaxKind.ParenthesizedExpression]: ts.ParenthesizedExpression
  [ts.SyntaxKind.FunctionExpression]: ts.FunctionExpression
  [ts.SyntaxKind.ArrowFunction]: ts.ArrowFunction
  [ts.SyntaxKind.DeleteExpression]: ts.DeleteExpression
  [ts.SyntaxKind.TypeOfExpression]: ts.TypeOfExpression
  [ts.SyntaxKind.VoidExpression]: ts.VoidExpression
  [ts.SyntaxKind.AwaitExpression]: ts.AwaitExpression
  [ts.SyntaxKind.PrefixUnaryExpression]: ts.PrefixUnaryExpression
  [ts.SyntaxKind.PostfixUnaryExpression]: ts.PostfixUnaryExpression
  [ts.SyntaxKind.BinaryExpression]: ts.BinaryExpression
  [ts.SyntaxKind.ConditionalExpression]: ts.ConditionalExpression
  [ts.SyntaxKind.TemplateExpression]: ts.TemplateExpression
  [ts.SyntaxKind.YieldExpression]: ts.YieldExpression
  [ts.SyntaxKind.SpreadElement]: ts.SpreadElement
  [ts.SyntaxKind.ClassExpression]: ts.ClassExpression
  [ts.SyntaxKind.OmittedExpression]: ts.OmittedExpression
  [ts.SyntaxKind.ExpressionWithTypeArguments]: ts.ExpressionWithTypeArguments
  [ts.SyntaxKind.AsExpression]: ts.AsExpression
  [ts.SyntaxKind.NonNullExpression]: ts.NonNullExpression
  [ts.SyntaxKind.MetaProperty]: ts.MetaProperty
  [ts.SyntaxKind.SyntheticExpression]: ts.SyntheticExpression
  [ts.SyntaxKind.SatisfiesExpression]: ts.SatisfiesExpression
  [ts.SyntaxKind.TemplateSpan]: ts.TemplateSpan
  [ts.SyntaxKind.SemicolonClassElement]: ts.SemicolonClassElement
  [ts.SyntaxKind.Block]: ts.Block
  [ts.SyntaxKind.EmptyStatement]: ts.EmptyStatement
  [ts.SyntaxKind.VariableStatement]: ts.VariableStatement
  [ts.SyntaxKind.ExpressionStatement]: ts.ExpressionStatement
  [ts.SyntaxKind.IfStatement]: ts.IfStatement
  [ts.SyntaxKind.DoStatement]: ts.DoStatement
  [ts.SyntaxKind.WhileStatement]: ts.WhileStatement
  [ts.SyntaxKind.ForStatement]: ts.ForStatement
  [ts.SyntaxKind.ForInStatement]: ts.ForInStatement
  [ts.SyntaxKind.ForOfStatement]: ts.ForOfStatement
  [ts.SyntaxKind.ContinueStatement]: ts.ContinueStatement
  [ts.SyntaxKind.BreakStatement]: ts.BreakStatement
  [ts.SyntaxKind.ReturnStatement]: ts.ReturnStatement
  [ts.SyntaxKind.WithStatement]: ts.WithStatement
  [ts.SyntaxKind.SwitchStatement]: ts.SwitchStatement
  [ts.SyntaxKind.LabeledStatement]: ts.LabeledStatement
  [ts.SyntaxKind.ThrowStatement]: ts.ThrowStatement
  [ts.SyntaxKind.TryStatement]: ts.TryStatement
  [ts.SyntaxKind.DebuggerStatement]: ts.DebuggerStatement
  [ts.SyntaxKind.VariableDeclaration]: ts.VariableDeclaration
  [ts.SyntaxKind.VariableDeclarationList]: ts.VariableDeclarationList
  [ts.SyntaxKind.FunctionDeclaration]: ts.FunctionDeclaration
  [ts.SyntaxKind.ClassDeclaration]: ts.ClassDeclaration
  [ts.SyntaxKind.InterfaceDeclaration]: ts.InterfaceDeclaration
  [ts.SyntaxKind.TypeAliasDeclaration]: ts.TypeAliasDeclaration
  [ts.SyntaxKind.EnumDeclaration]: ts.EnumDeclaration
  [ts.SyntaxKind.ModuleDeclaration]: ts.ModuleDeclaration
  [ts.SyntaxKind.ModuleBlock]: ts.ModuleBlock
  [ts.SyntaxKind.CaseBlock]: ts.CaseBlock
  [ts.SyntaxKind.NamespaceExportDeclaration]: ts.NamespaceExportDeclaration
  [ts.SyntaxKind.ImportEqualsDeclaration]: ts.ImportEqualsDeclaration
  [ts.SyntaxKind.ImportDeclaration]: ts.ImportDeclaration
  [ts.SyntaxKind.ImportClause]: ts.ImportClause
  [ts.SyntaxKind.NamespaceImport]: ts.NamespaceImport
  [ts.SyntaxKind.NamedImports]: ts.NamedImports
  [ts.SyntaxKind.ImportSpecifier]: ts.ImportSpecifier
  [ts.SyntaxKind.ExportAssignment]: ts.ExportAssignment
  [ts.SyntaxKind.ExportDeclaration]: ts.ExportDeclaration
  [ts.SyntaxKind.NamedExports]: ts.NamedExports
  [ts.SyntaxKind.NamespaceExport]: ts.NamespaceExport
  [ts.SyntaxKind.ExportSpecifier]: ts.ExportSpecifier
  [ts.SyntaxKind.MissingDeclaration]: ts.MissingDeclaration
  [ts.SyntaxKind.ExternalModuleReference]: ts.ExternalModuleReference
  [ts.SyntaxKind.JsxElement]: ts.JsxElement
  [ts.SyntaxKind.JsxSelfClosingElement]: ts.JsxSelfClosingElement
  [ts.SyntaxKind.JsxOpeningElement]: ts.JsxOpeningElement
  [ts.SyntaxKind.JsxClosingElement]: ts.JsxClosingElement
  [ts.SyntaxKind.JsxFragment]: ts.JsxFragment
  [ts.SyntaxKind.JsxOpeningFragment]: ts.JsxOpeningFragment
  [ts.SyntaxKind.JsxClosingFragment]: ts.JsxClosingFragment
  [ts.SyntaxKind.JsxAttribute]: ts.JsxAttribute
  [ts.SyntaxKind.JsxAttributes]: ts.JsxAttributes
  [ts.SyntaxKind.JsxSpreadAttribute]: ts.JsxSpreadAttribute
  [ts.SyntaxKind.JsxExpression]: ts.JsxExpression
  [ts.SyntaxKind.JsxNamespacedName]: ts.JsxNamespacedName
  [ts.SyntaxKind.CaseClause]: ts.CaseClause
  [ts.SyntaxKind.DefaultClause]: ts.DefaultClause
  [ts.SyntaxKind.HeritageClause]: ts.HeritageClause
  [ts.SyntaxKind.CatchClause]: ts.CatchClause
  [ts.SyntaxKind.ImportAttributes]: ts.ImportAttributes
  [ts.SyntaxKind.ImportAttribute]: ts.ImportAttribute
  [ts.SyntaxKind.PropertyAssignment]: ts.PropertyAssignment
  [ts.SyntaxKind.ShorthandPropertyAssignment]: ts.ShorthandPropertyAssignment
  [ts.SyntaxKind.SpreadAssignment]: ts.SpreadAssignment
  [ts.SyntaxKind.EnumMember]: ts.EnumMember
  [ts.SyntaxKind.SourceFile]: ts.SourceFile
  [ts.SyntaxKind.Bundle]: ts.Bundle
  [ts.SyntaxKind.JSDocTypeExpression]: ts.JSDocTypeExpression
  [ts.SyntaxKind.JSDocNameReference]: ts.JSDocNameReference
  [ts.SyntaxKind.JSDocMemberName]: ts.JSDocMemberName
  [ts.SyntaxKind.JSDocAllType]: ts.JSDocAllType
  [ts.SyntaxKind.JSDocUnknownType]: ts.JSDocUnknownType
  [ts.SyntaxKind.JSDocNullableType]: ts.JSDocNullableType
  [ts.SyntaxKind.JSDocNonNullableType]: ts.JSDocNonNullableType
  [ts.SyntaxKind.JSDocOptionalType]: ts.JSDocOptionalType
  [ts.SyntaxKind.JSDocFunctionType]: ts.JSDocFunctionType
  [ts.SyntaxKind.JSDocVariadicType]: ts.JSDocVariadicType
  [ts.SyntaxKind.JSDocNamepathType]: ts.JSDocNamepathType
  [ts.SyntaxKind.JSDoc]: ts.JSDoc
  [ts.SyntaxKind.JSDocText]: ts.JSDocText
  [ts.SyntaxKind.JSDocTypeLiteral]: ts.JSDocTypeLiteral
  [ts.SyntaxKind.JSDocSignature]: ts.JSDocSignature
  [ts.SyntaxKind.JSDocLink]: ts.JSDocLink
  [ts.SyntaxKind.JSDocLinkCode]: ts.JSDocLinkCode
  [ts.SyntaxKind.JSDocLinkPlain]: ts.JSDocLinkPlain
  [ts.SyntaxKind.JSDocTag]: ts.JSDocTag
  [ts.SyntaxKind.JSDocAugmentsTag]: ts.JSDocAugmentsTag
  [ts.SyntaxKind.JSDocImplementsTag]: ts.JSDocImplementsTag
  [ts.SyntaxKind.JSDocAuthorTag]: ts.JSDocAuthorTag
  [ts.SyntaxKind.JSDocDeprecatedTag]: ts.JSDocDeprecatedTag
  [ts.SyntaxKind.JSDocClassTag]: ts.JSDocClassTag
  [ts.SyntaxKind.JSDocPublicTag]: ts.JSDocPublicTag
  [ts.SyntaxKind.JSDocPrivateTag]: ts.JSDocPrivateTag
  [ts.SyntaxKind.JSDocProtectedTag]: ts.JSDocProtectedTag
  [ts.SyntaxKind.JSDocReadonlyTag]: ts.JSDocReadonlyTag
  [ts.SyntaxKind.JSDocOverrideTag]: ts.JSDocOverrideTag
  [ts.SyntaxKind.JSDocCallbackTag]: ts.JSDocCallbackTag
  [ts.SyntaxKind.JSDocOverloadTag]: ts.JSDocOverloadTag
  [ts.SyntaxKind.JSDocEnumTag]: ts.JSDocEnumTag
  [ts.SyntaxKind.JSDocParameterTag]: ts.JSDocParameterTag
  [ts.SyntaxKind.JSDocReturnTag]: ts.JSDocReturnTag
  [ts.SyntaxKind.JSDocThisTag]: ts.JSDocThisTag
  [ts.SyntaxKind.JSDocTypeTag]: ts.JSDocTypeTag
  [ts.SyntaxKind.JSDocTemplateTag]: ts.JSDocTemplateTag
  [ts.SyntaxKind.JSDocTypedefTag]: ts.JSDocTypedefTag
  [ts.SyntaxKind.JSDocSeeTag]: ts.JSDocSeeTag
  [ts.SyntaxKind.JSDocPropertyTag]: ts.JSDocPropertyTag
  [ts.SyntaxKind.JSDocThrowsTag]: ts.JSDocThrowsTag
  [ts.SyntaxKind.JSDocSatisfiesTag]: ts.JSDocSatisfiesTag
  [ts.SyntaxKind.SyntaxList]: ts.SyntaxList
  [ts.SyntaxKind.NotEmittedStatement]: ts.NotEmittedStatement
  [ts.SyntaxKind.PartiallyEmittedExpression]: ts.PartiallyEmittedExpression
  [ts.SyntaxKind.CommaListExpression]: ts.CommaListExpression
}
